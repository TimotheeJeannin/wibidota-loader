/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.wibi.wibidota.dotaloader;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Players extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Players\",\"namespace\":\"com.wibi.wibidota.dotaloader\",\"fields\":[{\"name\":\"players\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Player\",\"fields\":[{\"name\":\"gold_spent\",\"type\":\"int\"},{\"name\":\"gold\",\"type\":\"int\"},{\"name\":\"deaths\",\"type\":\"int\"},{\"name\":\"hero_damage\",\"type\":\"int\"},{\"name\":\"last_hits\",\"type\":\"int\"},{\"name\":\"player_slot\",\"type\":\"int\"},{\"name\":\"denies\",\"type\":\"int\"},{\"name\":\"ability_upgrades\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AbilityUpgrade\",\"fields\":[{\"name\":\"level\",\"type\":\"int\"},{\"name\":\"ability_id\",\"type\":\"int\"},{\"name\":\"time\",\"type\":\"int\"}]}}},{\"name\":\"tower_damage\",\"type\":\"int\"},{\"name\":\"hero_id\",\"type\":\"int\"},{\"name\":\"exp_per_minute\",\"type\":\"double\"},{\"name\":\"account_id\",\"type\":\"long\"},{\"name\":\"kills\",\"type\":\"int\"},{\"name\":\"leaver_status\",\"type\":{\"type\":\"enum\",\"name\":\"LeaverStatus\",\"symbols\":[\"BOT\",\"ABANDON\",\"SAFE_ABANDON\",\"STAYED\"]}},{\"name\":\"hero_healing\",\"type\":\"int\"},{\"name\":\"assists\",\"type\":\"int\"},{\"name\":\"gold_per_minute\",\"type\":\"double\"},{\"name\":\"level\",\"type\":\"int\"},{\"name\":\"item_ids\",\"type\":{\"type\":\"array\",\"items\":\"int\"}},{\"name\":\"additional_units\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AdditionalUnit\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"item_ids\",\"type\":{\"type\":\"array\",\"items\":\"int\"}}]}]}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<com.wibi.wibidota.dotaloader.Player> players;

  /**
   * Default constructor.
   */
  public Players() {}

  /**
   * All-args constructor.
   */
  public Players(java.util.List<com.wibi.wibidota.dotaloader.Player> players) {
    this.players = players;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return players;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: players = (java.util.List<com.wibi.wibidota.dotaloader.Player>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'players' field.
   */
  public java.util.List<com.wibi.wibidota.dotaloader.Player> getPlayers() {
    return players;
  }

  /**
   * Sets the value of the 'players' field.
   * @param value the value to set.
   */
  public void setPlayers(java.util.List<com.wibi.wibidota.dotaloader.Player> value) {
    this.players = value;
  }

  /** Creates a new Players RecordBuilder */
  public static com.wibi.wibidota.dotaloader.Players.Builder newBuilder() {
    return new com.wibi.wibidota.dotaloader.Players.Builder();
  }
  
  /** Creates a new Players RecordBuilder by copying an existing Builder */
  public static com.wibi.wibidota.dotaloader.Players.Builder newBuilder(com.wibi.wibidota.dotaloader.Players.Builder other) {
    return new com.wibi.wibidota.dotaloader.Players.Builder(other);
  }
  
  /** Creates a new Players RecordBuilder by copying an existing Players instance */
  public static com.wibi.wibidota.dotaloader.Players.Builder newBuilder(com.wibi.wibidota.dotaloader.Players other) {
    return new com.wibi.wibidota.dotaloader.Players.Builder(other);
  }
  
  /**
   * RecordBuilder for Players instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Players>
    implements org.apache.avro.data.RecordBuilder<Players> {

    private java.util.List<com.wibi.wibidota.dotaloader.Player> players;

    /** Creates a new Builder */
    private Builder() {
      super(com.wibi.wibidota.dotaloader.Players.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.wibi.wibidota.dotaloader.Players.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Players instance */
    private Builder(com.wibi.wibidota.dotaloader.Players other) {
            super(com.wibi.wibidota.dotaloader.Players.SCHEMA$);
      if (isValidValue(fields()[0], other.players)) {
        this.players = data().deepCopy(fields()[0].schema(), other.players);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'players' field */
    public java.util.List<com.wibi.wibidota.dotaloader.Player> getPlayers() {
      return players;
    }
    
    /** Sets the value of the 'players' field */
    public com.wibi.wibidota.dotaloader.Players.Builder setPlayers(java.util.List<com.wibi.wibidota.dotaloader.Player> value) {
      validate(fields()[0], value);
      this.players = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'players' field has been set */
    public boolean hasPlayers() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'players' field */
    public com.wibi.wibidota.dotaloader.Players.Builder clearPlayers() {
      players = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public Players build() {
      try {
        Players record = new Players();
        record.players = fieldSetFlags()[0] ? this.players : (java.util.List<com.wibi.wibidota.dotaloader.Player>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
